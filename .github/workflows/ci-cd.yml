name: CI/CD Pipeline

on:
  push:
    branches:
      - master
      - kubernetes  # Incluir aqui a branch que acionará o pipeline completo
  pull_request:
    branches:
      - main
      - kubernetes

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout source code
      uses: actions/checkout@v3

    # Set up JDK 17
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        java-package: jdk
        distribution: temurin  # Escolha a distribuição desejada

    # Build services
    - name: Build Server Service
      run: mvn clean install --file ./server/pom.xml

    - name: Build Gateway Service
      run: mvn clean install --file ./gateway/pom.xml

    - name: Build Pedidos Service
      run: mvn clean install --file ./pedidos/pom.xml

    - name: Build Pagamentos Service
      run: mvn clean install --file ./pagamentos/pom.xml

    - name: Build Avaliacao Service
      run: mvn clean install --file ./avaliacao/pom.xml

    # Run Unit Tests
    #- name: Run Unit Tests for Server Service
     # run: mvn test --file ./server/pom.xml || true

    #- name: Run Unit Tests for Gateway Service
     # run: mvn test --file ./gateway/pom.xml || true

    #- name: Run Unit Tests for Pedidos Service
    #  run: mvn test --file ./pedidos/pom.xml || true

    #- name: Run Unit Tests for Pagamentos Service
     # run: mvn test --file ./pagamentos/pom.xml || true

   # - name: Run Unit Tests for Avaliacao Service
    #  run: mvn test --file ./avaliacao/pom.xml || true

    # Docker Login
    - name: Log in to DockerHub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    # Build and Push Docker Images
    - name: Build Docker Images
      run: |
        docker-compose -f docker-compose.yml build

    - name: Push Docker Images
      run: |
        docker-compose -f docker-compose.yml push

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      # Deploy to Kubernetes only on the 'kubernetes' branch
      - name: Deploy to Kubernetes
        if: github.ref == 'refs/heads/kubernetes'  # Condição para rodar apenas na branch 'kubernetes'
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}
        run: |
          kubectl apply -f k8s/mysql.yaml
          kubectl apply -f k8s/secrets.yaml
          kubectl apply -f k8s/configmap.yaml
          kubectl apply -f k8s/volumes.yaml
          kubectl apply -f k8s/services.yaml
          kubectl apply -f k8s/app.yaml
          kubectl apply -f k8s/loadbalancer.yaml
